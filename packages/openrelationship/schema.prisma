// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id                                       Int                         @id @default(autoincrement())
  name                                     String                      @default("")
  email                                    String                      @unique @default("")
  password                                 String
  role                                     String
  isProtected                              Boolean                     @default(false)
  from_Post_createdBy                      Post[]                      @relation("Post_createdBy")
  from_Post_updatedBy                      Post[]                      @relation("Post_updatedBy")
  from_Area_createdBy                      Area[]                      @relation("Area_createdBy")
  from_Area_updatedBy                      Area[]                      @relation("Area_updatedBy")
  from_Event_createdBy                     Event[]                     @relation("Event_createdBy")
  from_Event_updatedBy                     Event[]                     @relation("Event_updatedBy")
  from_Election_createdBy                  Election[]                  @relation("Election_createdBy")
  from_Election_updatedBy                  Election[]                  @relation("Election_updatedBy")
  from_Vote_createdBy                      Vote[]                      @relation("Vote_createdBy")
  from_Vote_updatedBy                      Vote[]                      @relation("Vote_updatedBy")
  from_Person_createdBy                    Person[]                    @relation("Person_createdBy")
  from_Person_updatedBy                    Person[]                    @relation("Person_updatedBy")
  from_Motion_createdBy                    Motion[]                    @relation("Motion_createdBy")
  from_Motion_updatedBy                    Motion[]                    @relation("Motion_updatedBy")
  from_Organization_createdBy              Organization[]              @relation("Organization_createdBy")
  from_Organization_updatedBy              Organization[]              @relation("Organization_updatedBy")
  from_Collaborate_createdBy               Collaborate[]               @relation("Collaborate_createdBy")
  from_Collaborate_updatedBy               Collaborate[]               @relation("Collaborate_updatedBy")
  from_Membership_createdBy                Membership[]                @relation("Membership_createdBy")
  from_Membership_updatedBy                Membership[]                @relation("Membership_updatedBy")
  from_ContactDetail_createdBy             ContactDetail[]             @relation("ContactDetail_createdBy")
  from_ContactDetail_updatedBy             ContactDetail[]             @relation("ContactDetail_updatedBy")
  from_Count_createdBy                     Count[]                     @relation("Count_createdBy")
  from_Count_updatedBy                     Count[]                     @relation("Count_updatedBy")
  from_OrganizationsElection_createdBy     OrganizationsElection[]     @relation("OrganizationsElection_createdBy")
  from_OrganizationsElection_updatedBy     OrganizationsElection[]     @relation("OrganizationsElection_updatedBy")
  from_OrganizationsRelationship_createdBy OrganizationsRelationship[] @relation("OrganizationsRelationship_createdBy")
  from_OrganizationsRelationship_updatedBy OrganizationsRelationship[] @relation("OrganizationsRelationship_updatedBy")
  from_PersonElection_createdBy            PersonElection[]            @relation("PersonElection_createdBy")
  from_PersonElection_updatedBy            PersonElection[]            @relation("PersonElection_updatedBy")
  from_PersonOrganization_createdBy        PersonOrganization[]        @relation("PersonOrganization_createdBy")
  from_PersonOrganization_updatedBy        PersonOrganization[]        @relation("PersonOrganization_updatedBy")
  from_PersonPublication_createdBy         PersonPublication[]         @relation("PersonPublication_createdBy")
  from_PersonPublication_updatedBy         PersonPublication[]         @relation("PersonPublication_updatedBy")
  from_PersonRelationship_createdBy        PersonRelationship[]        @relation("PersonRelationship_createdBy")
  from_PersonRelationship_updatedBy        PersonRelationship[]        @relation("PersonRelationship_updatedBy")
  from_Politic_createdBy                   Politic[]                   @relation("Politic_createdBy")
  from_Politic_updatedBy                   Politic[]                   @relation("Politic_updatedBy")
  from_PoliticProgress_createdBy           PoliticProgress[]           @relation("PoliticProgress_createdBy")
  from_PoliticProgress_updatedBy           PoliticProgress[]           @relation("PoliticProgress_updatedBy")
  from_Lawsuit_createdBy                   Lawsuit[]                   @relation("Lawsuit_createdBy")
  from_Lawsuit_updatedBy                   Lawsuit[]                   @relation("Lawsuit_updatedBy")
}

model Post {
  id                    Int           @id @default(autoincrement())
  label                 String        @default("")
  other_label           String        @default("")
  role                  String        @default("")
  organization          Organization? @relation("Post_organization", fields: [organizationId], references: [id])
  organizationId        Int?          @map("organization")
  area                  Area?         @relation("Post_area", fields: [areaId], references: [id])
  areaId                Int?          @map("area")
  start_date            DateTime?
  end_date              DateTime?
  links                 String        @default("")
  createdAt             DateTime?
  updatedAt             DateTime?
  createdBy             User?         @relation("Post_createdBy", fields: [createdById], references: [id])
  createdById           Int?          @map("createdBy")
  updatedBy             User?         @relation("Post_updatedBy", fields: [updatedById], references: [id])
  updatedById           Int?          @map("updatedBy")
  from_Membership_posts Membership[]  @relation("Membership_posts")

  @@index([organizationId])
  @@index([areaId])
  @@index([createdById])
  @@index([updatedById])
}

model Area {
  id                   Int            @id @default(autoincrement())
  name                 String         @default("")
  identifiers          String         @default("")
  classification       String         @default("")
  parent               Area?          @relation("Area_parent", fields: [parentId], references: [id])
  parentId             Int?           @map("parent")
  geometry             String         @default("")
  organizations        Organization[] @relation("Area_organizations")
  posts                String         @default("")
  children             Area[]         @relation("Area_children")
  createdAt            DateTime?
  updatedAt            DateTime?
  createdBy            User?          @relation("Area_createdBy", fields: [createdById], references: [id])
  createdById          Int?           @map("createdBy")
  updatedBy            User?          @relation("Area_updatedBy", fields: [updatedById], references: [id])
  updatedById          Int?           @map("updatedBy")
  from_Post_area       Post[]         @relation("Post_area")
  from_Area_parent     Area[]         @relation("Area_parent")
  from_Area_children   Area[]         @relation("Area_children")
  from_Membership_area Membership[]   @relation("Membership_area")

  @@index([parentId])
  @@index([createdById])
  @@index([updatedById])
}

model Event {
  id             Int       @id @default(autoincrement())
  name           String    @default("")
  description    String    @default("")
  start_date     String    @default("")
  end_date       String    @default("")
  location       String    @default("")
  status         String    @default("")
  identifier     String    @default("")
  motion         String    @default("")
  classification String    @default("")
  organization   String    @default("")
  attendees      String    @default("")
  parent         String    @default("")
  children       String    @default("")
  createdAt      DateTime?
  updatedAt      DateTime?
  createdBy      User?     @relation("Event_createdBy", fields: [createdById], references: [id])
  createdById    Int?      @map("createdBy")
  updatedBy      User?     @relation("Event_updatedBy", fields: [updatedById], references: [id])
  updatedById    Int?      @map("updatedBy")

  @@index([createdById])
  @@index([updatedById])
}

model Election {
  id                           Int              @id @default(autoincrement())
  name                         String           @default("")
  description                  String           @default("")
  election_year_year           Int?
  election_year_month          Int?
  election_year_day            Int?
  type                         String?
  register_date                String           @default("")
  location                     String           @default("")
  status                       String           @default("")
  createdAt                    DateTime?
  updatedAt                    DateTime?
  createdBy                    User?            @relation("Election_createdBy", fields: [createdById], references: [id])
  createdById                  Int?             @map("createdBy")
  updatedBy                    User?            @relation("Election_updatedBy", fields: [updatedById], references: [id])
  updatedById                  Int?             @map("updatedBy")
  from_PersonElection_election PersonElection[] @relation("PersonElection_election")
  from_Politic_election        Politic[]        @relation("Politic_election")

  @@index([createdById])
  @@index([updatedById])
}

model Vote {
  id          Int       @id @default(autoincrement())
  vote_event  String    @default("")
  voter       String    @default("")
  option      String    @default("")
  group       String    @default("")
  role        String    @default("")
  weight      String    @default("")
  pair        Person?   @relation("Vote_pair", fields: [pairId], references: [id])
  pairId      Int?      @map("pair")
  createdAt   DateTime?
  updatedAt   DateTime?
  createdBy   User?     @relation("Vote_createdBy", fields: [createdById], references: [id])
  createdById Int?      @map("createdBy")
  updatedBy   User?     @relation("Vote_updatedBy", fields: [updatedById], references: [id])
  updatedById Int?      @map("updatedBy")

  @@index([pairId])
  @@index([createdById])
  @@index([updatedById])
}

model Person {
  id                                        Int                  @id @default(autoincrement())
  name                                      String               @default("")
  alternative                               String               @default("")
  other_names                               String               @default("")
  email                                     String               @default("")
  gender                                    String?
  birth_date_year                           Int?
  birth_date_month                          Int?
  birth_date_day                            Int?
  death_date_year                           Int?
  death_date_month                          Int?
  death_date_day                            Int?
  image                                     String               @default("")
  summary                                   String               @default("")
  biography                                 String               @default("")
  national_identity                         String               @default("")
  contact_details                           String               @default("")
  links                                     String               @default("")
  source                                    String               @default("")
  createdAt                                 DateTime?
  updatedAt                                 DateTime?
  createdBy                                 User?                @relation("Person_createdBy", fields: [createdById], references: [id])
  createdById                               Int?                 @map("createdBy")
  updatedBy                                 User?                @relation("Person_updatedBy", fields: [updatedById], references: [id])
  updatedById                               Int?                 @map("updatedBy")
  from_Vote_pair                            Vote[]               @relation("Vote_pair")
  from_Membership_member                    Membership[]         @relation("Membership_member")
  from_PersonElection_person_id             PersonElection[]     @relation("PersonElection_person_id")
  from_PersonOrganization_person_id         PersonOrganization[] @relation("PersonOrganization_person_id")
  from_PersonPublication_person_id          PersonPublication[]  @relation("PersonPublication_person_id")
  from_PersonRelationship_person_id         PersonRelationship[] @relation("PersonRelationship_person_id")
  from_PersonRelationship_related_person_id PersonRelationship[] @relation("PersonRelationship_related_person_id")
  from_Politic_person                       Politic[]            @relation("Politic_person")
  from_Lawsuit_person                       Lawsuit[]            @relation("Lawsuit_person")

  @@index([createdById])
  @@index([updatedById])
}

model Motion {
  id                  Int       @id @default(autoincrement())
  organization        String    @default("")
  legislative_session String    @default("")
  creator             String    @default("")
  text                String    @default("")
  identifier          String    @default("")
  classification      String    @default("")
  date                String    @default("")
  requirement         String    @default("")
  result              String    @default("")
  vote_events         String    @default("")
  createdAt           DateTime?
  updatedAt           DateTime?
  createdBy           User?     @relation("Motion_createdBy", fields: [createdById], references: [id])
  createdById         Int?      @map("createdBy")
  updatedBy           User?     @relation("Motion_updatedBy", fields: [updatedById], references: [id])
  updatedById         Int?      @map("updatedBy")

  @@index([createdById])
  @@index([updatedById])
}

model Organization {
  id                                                     Int                         @id @default(autoincrement())
  name                                                   String                      @default("")
  alternative                                            String                      @default("")
  other_names                                            String                      @default("")
  identifiers                                            String                      @default("")
  classification                                         String?
  abstract                                               String                      @default("")
  description                                            String                      @default("")
  founding_date_year                                     Int?
  founding_date_month                                    Int?
  founding_date_day                                      Int?
  dissolution_date_year                                  Int?
  dissolution_date_month                                 Int?
  dissolution_date_day                                   Int?
  image                                                  String                      @default("")
  contact_details                                        String                      @default("")
  links                                                  String                      @default("")
  address                                                String                      @default("")
  source                                                 String                      @default("")
  createdAt                                              DateTime?
  updatedAt                                              DateTime?
  createdBy                                              User?                       @relation("Organization_createdBy", fields: [createdById], references: [id])
  createdById                                            Int?                        @map("createdBy")
  updatedBy                                              User?                       @relation("Organization_updatedBy", fields: [updatedById], references: [id])
  updatedById                                            Int?                        @map("updatedBy")
  from_Post_organization                                 Post[]                      @relation("Post_organization")
  from_Area_organizations                                Area[]                      @relation("Area_organizations")
  from_Membership_organization                           Membership[]                @relation("Membership_organization")
  from_OrganizationsElection_organization_id             OrganizationsElection[]     @relation("OrganizationsElection_organization_id")
  from_OrganizationsRelationship_organization_id         OrganizationsRelationship[] @relation("OrganizationsRelationship_organization_id")
  from_OrganizationsRelationship_related_organization_id OrganizationsRelationship[] @relation("OrganizationsRelationship_related_organization_id")
  from_PersonOrganization_organization_id                PersonOrganization[]        @relation("PersonOrganization_organization_id")
  from_PersonPublication_organization_id                 PersonPublication[]         @relation("PersonPublication_organization_id")

  @@index([createdById])
  @@index([updatedById])
}

model Collaborate {
  id          Int       @id @default(autoincrement())
  name        String    @default("")
  email       String    @default("")
  feedback    String    @default("")
  createdAt   DateTime?
  updatedAt   DateTime?
  createdBy   User?     @relation("Collaborate_createdBy", fields: [createdById], references: [id])
  createdById Int?      @map("createdBy")
  updatedBy   User?     @relation("Collaborate_updatedBy", fields: [updatedById], references: [id])
  updatedById Int?      @map("updatedBy")

  @@index([createdById])
  @@index([updatedById])
}

model Membership {
  id              Int           @id @default(autoincrement())
  label           String        @default("")
  role            String        @default("")
  member          Person?       @relation("Membership_member", fields: [memberId], references: [id])
  memberId        Int?          @map("member")
  organization    Organization? @relation("Membership_organization", fields: [organizationId], references: [id])
  organizationId  Int?          @map("organization")
  posts           Post?         @relation("Membership_posts", fields: [postsId], references: [id])
  postsId         Int?          @map("posts")
  on_behalf_of_id String        @default("")
  area            Area?         @relation("Membership_area", fields: [areaId], references: [id])
  areaId          Int?          @map("area")
  start_date      DateTime?
  end_date        DateTime?
  links           String        @default("")
  createdAt       DateTime?
  updatedAt       DateTime?
  createdBy       User?         @relation("Membership_createdBy", fields: [createdById], references: [id])
  createdById     Int?          @map("createdBy")
  updatedBy       User?         @relation("Membership_updatedBy", fields: [updatedById], references: [id])
  updatedById     Int?          @map("updatedBy")

  @@index([memberId])
  @@index([organizationId])
  @@index([postsId])
  @@index([areaId])
  @@index([createdById])
  @@index([updatedById])
}

model ContactDetail {
  id          Int       @id @default(autoincrement())
  label       String    @default("")
  type        String    @default("")
  value       String    @default("")
  valid_from  DateTime?
  valid_until DateTime?
  createdAt   DateTime?
  updatedAt   DateTime?
  createdBy   User?     @relation("ContactDetail_createdBy", fields: [createdById], references: [id])
  createdById Int?      @map("createdBy")
  updatedBy   User?     @relation("ContactDetail_updatedBy", fields: [updatedById], references: [id])
  updatedById Int?      @map("updatedBy")

  @@index([createdById])
  @@index([updatedById])
}

model Count {
  id          Int       @id @default(autoincrement())
  option      String    @default("")
  value       String    @default("")
  group       String    @default("")
  createdAt   DateTime?
  updatedAt   DateTime?
  createdBy   User?     @relation("Count_createdBy", fields: [createdById], references: [id])
  createdById Int?      @map("createdBy")
  updatedBy   User?     @relation("Count_updatedBy", fields: [updatedById], references: [id])
  updatedById Int?      @map("updatedBy")

  @@index([createdById])
  @@index([updatedById])
}

model OrganizationsElection {
  id                    Int           @id @default(autoincrement())
  organization_id       Organization? @relation("OrganizationsElection_organization_id", fields: [organization_idId], references: [id])
  organization_idId     Int?          @map("organization_id")
  election_year_year    Int?
  election_year_month   Int?
  election_year_day     Int?
  number                String        @default("")
  votes_obtained_number String        @default("")
  seats                 String        @default("")
  source                String        @default("")
  createdAt             DateTime?
  updatedAt             DateTime?
  createdBy             User?         @relation("OrganizationsElection_createdBy", fields: [createdById], references: [id])
  createdById           Int?          @map("createdBy")
  updatedBy             User?         @relation("OrganizationsElection_updatedBy", fields: [updatedById], references: [id])
  updatedById           Int?          @map("updatedBy")

  @@index([organization_idId])
  @@index([createdById])
  @@index([updatedById])
}

model OrganizationsRelationship {
  id                        Int           @id @default(autoincrement())
  organization_id           Organization? @relation("OrganizationsRelationship_organization_id", fields: [organization_idId], references: [id])
  organization_idId         Int?          @map("organization_id")
  related_organization_id   Organization? @relation("OrganizationsRelationship_related_organization_id", fields: [related_organization_idId], references: [id])
  related_organization_idId Int?          @map("related_organization_id")
  relative                  String        @default("")
  start_date_year           Int?
  start_date_month          Int?
  start_date_day            Int?
  end_date_year             Int?
  end_date_month            Int?
  end_date_day              Int?
  source                    String        @default("")
  createdAt                 DateTime?
  updatedAt                 DateTime?
  createdBy                 User?         @relation("OrganizationsRelationship_createdBy", fields: [createdById], references: [id])
  createdById               Int?          @map("createdBy")
  updatedBy                 User?         @relation("OrganizationsRelationship_updatedBy", fields: [updatedById], references: [id])
  updatedById               Int?          @map("updatedBy")

  @@index([organization_idId])
  @@index([related_organization_idId])
  @@index([createdById])
  @@index([updatedById])
}

model PersonElection {
  id                        Int       @id @default(autoincrement())
  person_id                 Person?   @relation("PersonElection_person_id", fields: [person_idId], references: [id])
  person_idId               Int?      @map("person_id")
  election                  Election? @relation("PersonElection_election", fields: [electionId], references: [id])
  electionId                Int?      @map("election")
  party                     String    @default("")
  legislatoratlarge_number  String    @default("")
  number                    String    @default("")
  electoral_district        String    @default("")
  votes_obtained_number     String    @default("")
  votes_obtained_percentage String    @default("")
  elected                   String    @default("")
  incumbent                 String    @default("")
  source                    String    @default("")
  createdAt                 DateTime?
  updatedAt                 DateTime?
  createdBy                 User?     @relation("PersonElection_createdBy", fields: [createdById], references: [id])
  createdById               Int?      @map("createdBy")
  updatedBy                 User?     @relation("PersonElection_updatedBy", fields: [updatedById], references: [id])
  updatedById               Int?      @map("updatedBy")

  @@index([person_idId])
  @@index([electionId])
  @@index([createdById])
  @@index([updatedById])
}

model PersonOrganization {
  id                Int           @id @default(autoincrement())
  person_id         Person?       @relation("PersonOrganization_person_id", fields: [person_idId], references: [id])
  person_idId       Int?          @map("person_id")
  organization_id   Organization? @relation("PersonOrganization_organization_id", fields: [organization_idId], references: [id])
  organization_idId Int?          @map("organization_id")
  role              String        @default("")
  start_date_year   Int?
  start_date_month  Int?
  start_date_day    Int?
  end_date_year     Int?
  end_date_month    Int?
  end_date_day      Int?
  source            String        @default("")
  createdAt         DateTime?
  updatedAt         DateTime?
  createdBy         User?         @relation("PersonOrganization_createdBy", fields: [createdById], references: [id])
  createdById       Int?          @map("createdBy")
  updatedBy         User?         @relation("PersonOrganization_updatedBy", fields: [updatedById], references: [id])
  updatedById       Int?          @map("updatedBy")

  @@index([person_idId])
  @@index([organization_idId])
  @@index([createdById])
  @@index([updatedById])
}

model PersonPublication {
  id                Int           @id @default(autoincrement())
  person_id         Person?       @relation("PersonPublication_person_id", fields: [person_idId], references: [id])
  person_idId       Int?          @map("person_id")
  organization_id   Organization? @relation("PersonPublication_organization_id", fields: [organization_idId], references: [id])
  organization_idId Int?          @map("organization_id")
  role              String        @default("")
  start_date_year   Int?
  start_date_month  Int?
  start_date_day    Int?
  end_date_year     Int?
  end_date_month    Int?
  end_date_day      Int?
  source            String        @default("")
  createdAt         DateTime?
  updatedAt         DateTime?
  createdBy         User?         @relation("PersonPublication_createdBy", fields: [createdById], references: [id])
  createdById       Int?          @map("createdBy")
  updatedBy         User?         @relation("PersonPublication_updatedBy", fields: [updatedById], references: [id])
  updatedById       Int?          @map("updatedBy")

  @@index([person_idId])
  @@index([organization_idId])
  @@index([createdById])
  @@index([updatedById])
}

model PersonRelationship {
  id                  Int       @id @default(autoincrement())
  person_id           Person?   @relation("PersonRelationship_person_id", fields: [person_idId], references: [id])
  person_idId         Int?      @map("person_id")
  related_person_id   Person?   @relation("PersonRelationship_related_person_id", fields: [related_person_idId], references: [id])
  related_person_idId Int?      @map("related_person_id")
  relative            String    @default("")
  start_date_year     Int?
  start_date_month    Int?
  start_date_day      Int?
  end_date_year       Int?
  end_date_month      Int?
  end_date_day        Int?
  source              Int?
  createdAt           DateTime?
  updatedAt           DateTime?
  createdBy           User?     @relation("PersonRelationship_createdBy", fields: [createdById], references: [id])
  createdById         Int?      @map("createdBy")
  updatedBy           User?     @relation("PersonRelationship_updatedBy", fields: [updatedById], references: [id])
  updatedById         Int?      @map("updatedBy")

  @@index([person_idId])
  @@index([related_person_idId])
  @@index([createdById])
  @@index([updatedById])
}

model Politic {
  id                           Int               @id @default(autoincrement())
  person                       Person?           @relation("Politic_person", fields: [personId], references: [id])
  personId                     Int?              @map("person")
  election                     Election?         @relation("Politic_election", fields: [electionId], references: [id])
  electionId                   Int?              @map("election")
  desc                         String            @default("")
  source                       String            @default("")
  contributer                  String            @default("")
  progress                     PoliticProgress[] @relation("Politic_progress")
  createdAt                    DateTime?
  updatedAt                    DateTime?
  createdBy                    User?             @relation("Politic_createdBy", fields: [createdById], references: [id])
  createdById                  Int?              @map("createdBy")
  updatedBy                    User?             @relation("Politic_updatedBy", fields: [updatedById], references: [id])
  updatedById                  Int?              @map("updatedBy")
  from_PoliticProgress_politic PoliticProgress[] @relation("PoliticProgress_politic")

  @@index([personId])
  @@index([electionId])
  @@index([createdById])
  @@index([updatedById])
}

model PoliticProgress {
  id                    Int       @id @default(autoincrement())
  politic               Politic?  @relation("PoliticProgress_politic", fields: [politicId], references: [id])
  politicId             Int?      @map("politic")
  progress              String    @default("")
  source                String    @default("")
  contributer           String    @default("")
  createdAt             DateTime?
  updatedAt             DateTime?
  createdBy             User?     @relation("PoliticProgress_createdBy", fields: [createdById], references: [id])
  createdById           Int?      @map("createdBy")
  updatedBy             User?     @relation("PoliticProgress_updatedBy", fields: [updatedById], references: [id])
  updatedById           Int?      @map("updatedBy")
  from_Politic_progress Politic[] @relation("Politic_progress")

  @@index([politicId])
  @@index([createdById])
  @@index([updatedById])
}

model Lawsuit {
  id            Int       @id @default(autoincrement())
  person        Person?   @relation("Lawsuit_person", fields: [personId], references: [id])
  personId      Int?      @map("person")
  crime_year    String    @default("")
  desc          String    @default("")
  source        String    @default("")
  contributer   String    @default("")
  judge_number  String    @default("")
  judge_desc    String    @default("")
  judge_content String    @default("")
  createdAt     DateTime?
  updatedAt     DateTime?
  createdBy     User?     @relation("Lawsuit_createdBy", fields: [createdById], references: [id])
  createdById   Int?      @map("createdBy")
  updatedBy     User?     @relation("Lawsuit_updatedBy", fields: [updatedById], references: [id])
  updatedById   Int?      @map("updatedBy")

  @@index([personId])
  @@index([createdById])
  @@index([updatedById])
}